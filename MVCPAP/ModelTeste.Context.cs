//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCPAP
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using MVCPAP.Models;

    public partial class DB1Entities : DbContext
    {
        public DB1Entities()
            : base("name=DB1Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Comment> Comment { get; set; }
        public virtual DbSet<User> User { get; set; }
        public virtual DbSet<Video> Video { get; set; }
    
        public virtual int ups_UpdateVideoPublishedAt(Nullable<int> id, Nullable<System.DateTime> publishedAt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var publishedAtParameter = publishedAt.HasValue ?
                new ObjectParameter("publishedAt", publishedAt) :
                new ObjectParameter("publishedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ups_UpdateVideoPublishedAt", idParameter, publishedAtParameter);
        }
    
        public virtual int usp_DeleteComment(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteComment", idParameter);
        }
    
        public virtual int usp_DeleteUser(string username, Nullable<int> discriminator)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var discriminatorParameter = discriminator.HasValue ?
                new ObjectParameter("discriminator", discriminator) :
                new ObjectParameter("discriminator", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteUser", usernameParameter, discriminatorParameter);
        }
    
        public virtual int usp_DeleteVideo(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_DeleteVideo", idParameter);
        }
    
        public virtual ObjectResult<usp_GetVideosSearch_Result> usp_GetVideosSearch(Nullable<int> amount, string query)
        {
            var amountParameter = amount.HasValue ?
                new ObjectParameter("amount", amount) :
                new ObjectParameter("amount", typeof(int));
    
            var queryParameter = query != null ?
                new ObjectParameter("query", query) :
                new ObjectParameter("query", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<usp_GetVideosSearch_Result>("usp_GetVideosSearch", amountParameter, queryParameter);
        }
    
        public virtual int usp_InsertComment(string comment, Nullable<int> video, string username, Nullable<int> discriminator, Nullable<System.DateTime> createAt)
        {
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var videoParameter = video.HasValue ?
                new ObjectParameter("video", video) :
                new ObjectParameter("video", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var discriminatorParameter = discriminator.HasValue ?
                new ObjectParameter("discriminator", discriminator) :
                new ObjectParameter("discriminator", typeof(int));
    
            var createAtParameter = createAt.HasValue ?
                new ObjectParameter("createAt", createAt) :
                new ObjectParameter("createAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertComment", commentParameter, videoParameter, usernameParameter, discriminatorParameter, createAtParameter);
        }
    
        public virtual int usp_InsertUser(string username, Nullable<int> discriminator, string password, string profilePicture, Nullable<System.DateTime> createdAt)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var discriminatorParameter = discriminator.HasValue ?
                new ObjectParameter("discriminator", discriminator) :
                new ObjectParameter("discriminator", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var profilePictureParameter = profilePicture != null ?
                new ObjectParameter("profilePicture", profilePicture) :
                new ObjectParameter("profilePicture", typeof(string));
    
            var createdAtParameter = createdAt.HasValue ?
                new ObjectParameter("createdAt", createdAt) :
                new ObjectParameter("createdAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertUser", usernameParameter, discriminatorParameter, passwordParameter, profilePictureParameter, createdAtParameter);
        }
    
        public virtual int usp_InsertVideo(string title, string username, Nullable<int> discriminator, string videoFile, string thumbnail, Nullable<int> upvotes, Nullable<int> downvotes, Nullable<System.DateTime> publishedAt)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var discriminatorParameter = discriminator.HasValue ?
                new ObjectParameter("discriminator", discriminator) :
                new ObjectParameter("discriminator", typeof(int));
    
            var videoFileParameter = videoFile != null ?
                new ObjectParameter("videoFile", videoFile) :
                new ObjectParameter("videoFile", typeof(string));
    
            var thumbnailParameter = thumbnail != null ?
                new ObjectParameter("thumbnail", thumbnail) :
                new ObjectParameter("thumbnail", typeof(string));
    
            var upvotesParameter = upvotes.HasValue ?
                new ObjectParameter("upvotes", upvotes) :
                new ObjectParameter("upvotes", typeof(int));
    
            var downvotesParameter = downvotes.HasValue ?
                new ObjectParameter("downvotes", downvotes) :
                new ObjectParameter("downvotes", typeof(int));
    
            var publishedAtParameter = publishedAt.HasValue ?
                new ObjectParameter("publishedAt", publishedAt) :
                new ObjectParameter("publishedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_InsertVideo", titleParameter, usernameParameter, discriminatorParameter, videoFileParameter, thumbnailParameter, upvotesParameter, downvotesParameter, publishedAtParameter);
        }
    
        public virtual int usp_UpdateComment(Nullable<int> id, string comment, Nullable<int> video, string username, Nullable<int> discriminator, Nullable<System.DateTime> createAt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("comment", comment) :
                new ObjectParameter("comment", typeof(string));
    
            var videoParameter = video.HasValue ?
                new ObjectParameter("video", video) :
                new ObjectParameter("video", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var discriminatorParameter = discriminator.HasValue ?
                new ObjectParameter("discriminator", discriminator) :
                new ObjectParameter("discriminator", typeof(int));
    
            var createAtParameter = createAt.HasValue ?
                new ObjectParameter("createAt", createAt) :
                new ObjectParameter("createAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateComment", idParameter, commentParameter, videoParameter, usernameParameter, discriminatorParameter, createAtParameter);
        }
    
        public virtual int usp_UpdateUser(string username, Nullable<int> discriminator, string password, string profilePicture, Nullable<System.DateTime> createdAt)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var discriminatorParameter = discriminator.HasValue ?
                new ObjectParameter("discriminator", discriminator) :
                new ObjectParameter("discriminator", typeof(int));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var profilePictureParameter = profilePicture != null ?
                new ObjectParameter("profilePicture", profilePicture) :
                new ObjectParameter("profilePicture", typeof(string));
    
            var createdAtParameter = createdAt.HasValue ?
                new ObjectParameter("createdAt", createdAt) :
                new ObjectParameter("createdAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateUser", usernameParameter, discriminatorParameter, passwordParameter, profilePictureParameter, createdAtParameter);
        }
    
        public virtual int usp_UpdateUserUsername(string username, Nullable<int> discriminator, string newUsername)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var discriminatorParameter = discriminator.HasValue ?
                new ObjectParameter("discriminator", discriminator) :
                new ObjectParameter("discriminator", typeof(int));
    
            var newUsernameParameter = newUsername != null ?
                new ObjectParameter("newUsername", newUsername) :
                new ObjectParameter("newUsername", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateUserUsername", usernameParameter, discriminatorParameter, newUsernameParameter);
        }
    
        public virtual int usp_UpdateVideo(Nullable<int> id, string title, string username, Nullable<int> discriminator, string videoFile, string thumbnail, Nullable<int> upvotes, Nullable<int> downvotes, Nullable<System.DateTime> publishedAt)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var discriminatorParameter = discriminator.HasValue ?
                new ObjectParameter("discriminator", discriminator) :
                new ObjectParameter("discriminator", typeof(int));
    
            var videoFileParameter = videoFile != null ?
                new ObjectParameter("videoFile", videoFile) :
                new ObjectParameter("videoFile", typeof(string));
    
            var thumbnailParameter = thumbnail != null ?
                new ObjectParameter("thumbnail", thumbnail) :
                new ObjectParameter("thumbnail", typeof(string));
    
            var upvotesParameter = upvotes.HasValue ?
                new ObjectParameter("upvotes", upvotes) :
                new ObjectParameter("upvotes", typeof(int));
    
            var downvotesParameter = downvotes.HasValue ?
                new ObjectParameter("downvotes", downvotes) :
                new ObjectParameter("downvotes", typeof(int));
    
            var publishedAtParameter = publishedAt.HasValue ?
                new ObjectParameter("publishedAt", publishedAt) :
                new ObjectParameter("publishedAt", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("usp_UpdateVideo", idParameter, titleParameter, usernameParameter, discriminatorParameter, videoFileParameter, thumbnailParameter, upvotesParameter, downvotesParameter, publishedAtParameter);
        }
    }
}
